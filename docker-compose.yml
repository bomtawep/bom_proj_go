version: '3.3'
networks:
  ingress:
    driver: bridge
services:
#  api:
#    container_name: 'bom-go-api'
#    build:
#        context: .
#        dockerfile: ./Dockerfile
#    image: 'bomtawep/bom-go-api:latest'
#    volumes:
#      - .:/app
#    ports:
#      - '8080:8080'
#    restart: on-failure
#    depends_on:
#      - 'mongo-db'
#    networks:
#      - ingress
  mongo-db:
    container_name: 'bom-mongo-db'
    image: 'mongo:latest'
    volumes:
      - ./data/dev/mongo:/data/db
    ports:
      - '27100:27017'
    environment:
        - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
        - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
        - MONGO_INITDB_DATABASE=${MONGO_DBNAME}
        - MONGO_INITDB_DATA_PATH=/data/db
    restart: on-failure
    networks:
      - ingress
  mysql-db:
    platform: linux/amd64
    image: mysql:5.7.32
    restart: on-failure
    environment:
      MYSQL_DATABASE: ${MONGO_DBNAME}
      MYSQL_USER: ${MONGO_USERNAME}
      MYSQL_PASSWORD: ${MONGO_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - .storage/mysql_data:/var/lib/mysql
    networks:
      - ingress

  grpc-proxy:
    depends_on:
      - coherence1
      - coherence2
    image: traefik:latest
    command: --api.insecure=true --providers.docker --entrypoints.other.address=:1408  --log.level=DEBUG
    ports:
#      - "8080:8080"
      - "1408:1408"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - ingress

  coherence1:
    hostname: machine1
    networks:
      - ingress
    image: ghcr.io/oracle/coherence-ce:23.03.1
    environment:
      - coherence.cluster=cluster1
      - coherence.member=member1
      - coherence.machine=machine1
      - coherence.wka=machine1
      - coherence.health.http.port=6676
      - coherence.management.http=all
    ports:
      - 30000:30000
    labels:
      - "traefik.enable=true"
      - "traefik.TCP.Routers.coherence2.Rule=HostSNI(`*`)"
      - "traefik.TCP.Services.coherence2.LoadBalancer.server.Port=1408"
      - "traefik.http.services.coherence2.loadbalancer.healthcheck.path=/ready"
      - "traefik.http.services.coherence2.loadbalancer.healthcheck.port=6676"

  coherence2:
    hostname: machine2
    networks:
      - ingress
    image: ghcr.io/oracle/coherence-ce:23.03.1
    environment:
      - coherence.cluster=cluster1
      - coherence.member=member2
      - coherence.machine=machine1
      - coherence.health.http.port=6676
      - coherence.wka=machine1
      - coherence.management=all
    labels:
      - "traefik.enable=true"
      - "traefik.TCP.Routers.coherence2.Rule=HostSNI(`*`)"
      - "traefik.TCP.Services.coherence2.LoadBalancer.server.Port=1408"
      - "traefik.http.services.coherence2.loadbalancer.healthcheck.path=/ready"
      - "traefik.http.services.coherence2.loadbalancer.healthcheck.port=6676"